#!/bin/bash

SCALEIO_SERVERS="scale1.example.com scale2.example.com scale3.example.com"
SCALEIO_PW="SCALEIO_ADMIN_PASSWORD"
PROTECTION_DOMAIN_NAME=domain1
STORAGE_POOL_NAME=pool1
TARGET_DEVICE=/dev/scinia
MYIP=192.168.33.1
PASSWORD_FILE=/etc/scaleio-backup-password.txt

display_usage() {
        echo "This script will create a new ScaleIO volume of the specified size and restore an encrypted gzip volume dump into it."
        echo "Usage: restore_snapshot (new_volume_name) (size_in_gb) (encrypted_gz_filename)"
	echo
        echo "Example: restore_snapshot testvol2 16 /volumedump/596fbe910000001b.gz"
        echo
        exit 1
}

if [  $# -ne 3 ]
then
        display_usage
        exit 1
fi
VOLUME_NAME=$1
SIZE=$2
FILENAME=$3

if [ ! -f ${FILENAME} ]; then
  echo; echo "ERROR: Unable to find ${FILENAME}. Aborting."; exit
fi

#Find out which server is our current primary MDM
PRIMARY_SERVER=
for SERVER in ${SCALEIO_SERVERS}; do
  OUTPUT=$(ssh ${SERVER} "scli --login --username admin --password ${SCALEIO_PW} 2>&1")
  #Error: Failed to connect
  #Logged in. User role is SuperUser. System ID is 78221ddb0dcff2f5
  WORKED=$(echo "${OUTPUT}" | grep 'Logged in')
  if [ $? -eq 0 ]; then
    PRIMARY_SERVER=${SERVER}
    break
  fi
done

if [ "${PRIMARY_SERVER}" != "" ]; then
  OUTPUT=$(ssh ${PRIMARY_SERVER} "scli --query_volume --volume_name ${VOLUME_NAME} 2>&1")
  #Error: MDM failed command.  Status: Could not find the volume
  WORKED=$(echo "${OUTPUT}" | grep 'Could not find the volume')
  if [ $? -eq 0 ]; then
    OUTPUT=$(ssh ${PRIMARY_SERVER} "scli --add_volume --protection_domain_name ${PROTECTION_DOMAIN_NAME} --storage_pool_name ${STORAGE_POOL_NAME} --size_gb ${SIZE} --volume_name ${VOLUME_NAME} --thin_provisioned")
    #Successfully created volume of size 16 GB. Object ID 597033bf0000003c
    WORKED=$(echo "${OUTPUT}" | grep 'Successfully created volume')
    if [ $? -eq 0 ]; then
      VOLUME_ID=$(echo "${OUTPUT}" | awk '/Object ID/ {print $NF}')
      WORKED=$(echo "${VOLUME_ID}" | egrep '[0-9a-f]{16}')
      if [ $? -eq 0 ]; then
        OUTPUT=$(ssh ${PRIMARY_SERVER} "scli --map_volume_to_sdc --volume_id ${VOLUME_ID} --sdc_ip ${MYIP}")
        #Successfully mapped volume with ID 597033bd0000001f to SDC 224.36.61.124
        WORKED=$(echo "${OUTPUT}" | grep "Successfully mapped")
        if [ $? -eq 0 ]; then
          sleep 5
          time openssl enc -d -aes-256-cbc -pass file:${PASSWORD_FILE} -in ${FILENAME} | gunzip -dc | dd bs=1048576 of=${TARGET_DEVICE}
          OUTPUT=$(ssh ${PRIMARY_SERVER} "scli --unmap_volume_from_sdc --volume_id ${VOLUME_ID} --sdc_ip ${MYIP} --i_am_sure")
          #Successfully un-mapped volume with ID 597033bd0000001f from SDC 224.36.61.124
          WORKED=$(echo "${OUTPUT}" | grep "Successfully un-mapped")
          if [ $? -ne 0 ]; then
            echo "${OUTPUT}"; echo
            echo "WARNING: Volume unmap from SDC ${MY_IP} was not successful. You may need to do the following manually on the primary MDM:"
            echo "scli --unmap_volume_from_sdc --volume_id ${VOLUME_ID} --sdc_ip ${MYIP} --i_am_sure"; exit
          fi
        else
          echo "${OUTPUT}"; echo; echo "ERROR: Did not successfully map volume ID ${VOLUME_ID} to SDC ${MYIP}."; exit
        fi
      else
        echo "${OUTPUT}"; echo; echo "ERROR: Could not find new volume ID."; exit
      fi
    else
      echo "${OUTPUT}"; echo; echo "ERROR: Failed to create volume ${VOLUME_NAME} with size ${SIZE}."; exit
    fi 
  else
    echo "${OUTPUT}"; echo; echo "ERROR: Please check that ${VOLUME_NAME} doesn't already exist."; exit
  fi
fi
