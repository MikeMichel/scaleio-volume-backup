#!/bin/bash

SCALEIO_SERVERS="scaleio1.example.com scaleio2.example.com scaleio3.example.com"
SCALEIO_PW="SCALEIO_ADMIN_PASSWORD"
PROTECTION_DOMAIN_NAME=default
STORAGE_POOL_NAME=default
TARGET_DEVICE=/dev/scinia
MYIP=224.36.61.210
PASSWORD_FILE=/etc/backup-passwords.txt
RATE=20

show_help() {
        echo -e "\nThis script will create a new ScaleIO volume of the specified name and size, temporarily attach it to ${TARGET_DEVICE} on this host, and restore an encrypted gzip volume dump into it."
        echo -e "\nUsage: restore_snapshot [OPTIONS] (-n new_volume_name) (-s size_in_gb) (-f encrypted_gz_filename)"
        echo -e "\nExample: restore_snapshot -n testvol2 -s 16 -f /volumedump/596fbe910000001b.gz\n"
        echo "OPTIONS:"
        echo " -h, -?   help"
        echo " -f       filepath of encrypted gzip file"
        echo " -n       name of the new scaleIO volume to create"
        echo " -s       size of the new volume to create (should match the original dumped volume size)"
        echo -e " -v       increase verbosity\n"
        exit 1
}

OPTIND=1
VOLUME_NAME=
SIZE=
FILEPATH=
VERBOSE=0

while getopts "f:h?n:s:v" opt; do
    case "$opt" in
    f)  FILEPATH=$OPTARG
        ;;
    h|\?)
        show_help
        exit 0
        ;;
    n)  VOLUME_NAME=$OPTARG
        ;;
    s)  SIZE=$OPTARG
        ;;
    v)  VERBOSE=1
        ;;
    esac
done

shift $((OPTIND-1))

if [ "${VOLUME_NAME}" == "" ]
then
        show_help
        exit 1
fi
if [ "${SIZE}" == "" ]
then
        show_help
        exit 1
fi
if [ "${FILEPATH}" == "" ]
then
        show_help
        exit 1
fi

if [ ! -f ${FILEPATH} ]; then
  echo -e "\nERROR: Unable to find ${FILEPATH}. Aborting."; exit 1
fi

#Find out which server is our current primary MDM
PRIMARY_SERVER=
for SERVER in ${SCALEIO_SERVERS}; do
  OUTPUT=$(ssh ${SERVER} "scli --login --username admin --password ${SCALEIO_PW} 2>&1")
  #Error: Failed to connect
  #Logged in. User role is SuperUser. System ID is 78221ddb0dcff2f5
  WORKED=$(echo "${OUTPUT}" | grep 'Logged in')
  if [ $? -eq 0 ]; then
    PRIMARY_SERVER=${SERVER}
    break
  fi
done

if [ "${PRIMARY_SERVER}" != "" ]; then
  if [ ${VERBOSE} -eq 1 ]; then echo -e "Found primary ScaleIO MDM ${PRIMARY_SERVER}\n"; fi
  OUTPUT=$(ssh ${PRIMARY_SERVER} "scli --query_volume --volume_name ${VOLUME_NAME} 2>&1")
  #Error: MDM failed command.  Status: Could not find the volume
  WORKED=$(echo "${OUTPUT}" | grep 'Could not find the volume')
  if [ $? -eq 0 ]; then
    OUTPUT=$(ssh ${PRIMARY_SERVER} "scli --add_volume --protection_domain_name ${PROTECTION_DOMAIN_NAME} --storage_pool_name ${STORAGE_POOL_NAME} --size_gb ${SIZE} --volume_name ${VOLUME_NAME} --thin_provisioned")
    #Successfully created volume of size 16 GB. Object ID 597033bf0000003c
    if [ ${VERBOSE} -eq 1 ]; then echo -e "${OUTPUT}\n"; fi
    WORKED=$(echo "${OUTPUT}" | grep 'Successfully created volume')
    if [ $? -eq 0 ]; then
      VOLUME_ID=$(echo "${OUTPUT}" | awk '/Object ID/ {print $NF}')
      WORKED=$(echo "${VOLUME_ID}" | egrep '[0-9a-f]{16}')
      if [ $? -eq 0 ]; then
        OUTPUT=$(ssh ${PRIMARY_SERVER} "scli --map_volume_to_sdc --volume_id ${VOLUME_ID} --sdc_ip ${MYIP}")
        if [ ${VERBOSE} -eq 1 ]; then echo -e "${OUTPUT}\n"; fi
        #Successfully mapped volume with ID 597033bd0000001f to SDC 224.36.61.124
        WORKED=$(echo "${OUTPUT}" | grep "Successfully mapped")
        if [ $? -eq 0 ]; then
          sleep 5
          time openssl enc -d -aes-256-cbc -pass file:${PASSWORD_FILE} -in ${FILEPATH} | gunzip -dc | pv -q --rate-limit ${RATE}m | dd bs=1048576 of=${TARGET_DEVICE}
          OUTPUT=$(ssh ${PRIMARY_SERVER} "scli --unmap_volume_from_sdc --volume_id ${VOLUME_ID} --sdc_ip ${MYIP} --i_am_sure")
          #Successfully un-mapped volume with ID 597033bd0000001f from SDC 224.36.61.124
          if [ ${VERBOSE} -eq 1 ]; then echo -e "${OUTPUT}\n"; fi
          WORKED=$(echo "${OUTPUT}" | grep "Successfully un-mapped")
          if [ $? -ne 0 ]; then
            echo "${OUTPUT}"; echo
            echo "WARNING: Volume unmap from SDC ${MY_IP} was not successful. You may need to do the following manually on the primary MDM:"
            echo "scli --unmap_volume_from_sdc --volume_id ${VOLUME_ID} --sdc_ip ${MYIP} --i_am_sure"; exit 2
          fi
        else
          echo -e "${OUTPUT}\nERROR: Did not successfully map volume ID ${VOLUME_ID} to SDC ${MYIP}."; exit 1
        fi
      else
        echo -e "\n${OUTPUT}\nERROR: Could not find new volume ID."; exit 1
      fi
    else
      echo -e "\n${OUTPUT}\nERROR: Failed to create volume ${VOLUME_NAME} with size ${SIZE}."; exit 1
    fi 
  else
    echo "${OUTPUT}"; echo; echo "ERROR: Please check that ${VOLUME_NAME} doesn't already exist."; exit 1
  fi
fi
